name: Publish Pluto Notebooks to Pages
on:
  push:
    branches:
      - master
  workflow_dispatch:

# When two jobs run in parallel, cancel the older ones, to make sure that the
# website is generated from the most recent commit.
concurrency:
  group: pluto-export
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3

      - name: Install Julia
        uses: julia-actions/setup-julia@latest
        with:
          version: "1.8"

      - name: Cache Julia artifacts & such
        uses: julia-actions/cache@v1
        with:
          cache-registries: "true"

      # We set up a folder that Pluto can use to cache exported notebooks.
      # If the notebook file did not change, then Pluto can take the exported
      # file from cache instead of running the notebook.
      - name: Set up notebook state cache
        uses: actions/cache@v3
        with:
          path: pluto_state_cache
          key: |
            ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('Project.toml', 'Manifest.toml', '.github/workflows/*' ) }}-${{ hashFiles('notebooks/*.*') }}
          restore-keys: |
            ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('Project.toml', 'Manifest.toml', '.github/workflows/*' ) }}

      - name: Run & export Pluto notebooks
        run: |
          julia -e 'using Pkg
            Pkg.activate(mktempdir())
            Pkg.add("PlutoSliderServer")
            import PlutoSliderServer
            PlutoSliderServer.github_action(".";
                Export_cache_dir="pluto_state_cache",
                Export_baked_notebookfile=false,
                Export_baked_state=false,
            )'

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: notebooks
          force_orphan: true
